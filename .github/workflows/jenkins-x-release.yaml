name: Release
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"
        token: ${{ secrets.GIT_BOT_TOKEN }}
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{ format('https://x-access-token:{0}@github.com/', secrets.GIT_BOT_TOKEN) }}
    - id: prep
      name: Set the release version
      uses: docker://gcr.io/jenkinsxio/jx-release-version:1.0.46
      with:
        args: -c "echo ::set-output name=version::$(jx-release-version)"
        entrypoint: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        VERSION: ${{ steps.prep.outputs.version}}
      name: release-binary
      uses: docker://golang:1.15
      with:
        args: -c "make release"
        entrypoint: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        VERSION: ${{ steps.prep.outputs.version}}
      name: chart-docs
      uses: docker://jnorwood/helm-docs:v1.4.0
      with:
        args: -c "if [ -d \"charts/$REPO_NAME\" ]; then cd charts/$REPO_NAME; helm-docs;
          else echo no charts; fi"
        entrypoint: /bin/ash
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPO_NAME: ${{ github.event.repository.name }}
        VERSION: ${{ steps.prep.outputs.version}}
      name: changelog
      uses: docker://gcr.io/jenkinsxio/jx-changelog:0.0.30
      with:
        entrypoint: .github/workflows/jenkins-x/changelog.sh
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPOSITORY: ${{ github.repository }}
        VERSION: ${{ steps.prep.outputs.version}}
      name: upload-binaries
      uses: docker://goreleaser/goreleaser:v0.155.0
      with:
        entrypoint: .github/workflows/jenkins-x/upload-binaries.sh
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version}}
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ steps.prep.outputs.version }}
    - env:
        GIT_USERNAME: jenkins-x-bot-test
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        VERSION: ${{ steps.prep.outputs.version}}
        XDG_CONFIG_HOME: /github/home/.config
      name: promote-release
      uses: docker://gcr.io/jenkinsxio/jx-updatebot:0.0.49
      with:
        entrypoint: jx-updatebot
        args: pr --git-credentials
"on":
  push:
    branches:
    - main
    - master
